<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2023.1.2 (Build 450U)" ts="2024-06-15 10:39:48">
<Class name="developer.test.Tests">
<Super>%UnitTest.TestCase,developer.test.Base</Super>
<TimeChanged>67006,38328.5494231</TimeChanged>
<TimeCreated>66999,36479.8916967</TimeCreated>

<Parameter name="TestSaveTime">
<Description>
規定処理時間</Description>
<Default>.5</Default>
</Parameter>

<Parameter name="TestSaveAvg">
<Description>
平均処理時間</Description>
<Default>.5</Default>
</Parameter>

<Method name="TestGetData">
<Implementation><![CDATA[
	#dim o as developer.data.Defrag1
	
	s name = "テスト　太郎"
	
	s o = ##class(developer.data.Defrag1).%OpenId(1)
	s o.漢字氏名 = name
	d $$$AssertStatusOK(o.%Save(),"name = "_o.漢字氏名)
	
	d $$$LogMessage("登録データの内容チェック")
	d $$$AssertEquals(o.漢字氏名, name, "Test 漢字氏名 = "_name)
]]></Implementation>
</Method>

<Method name="TestMulti">
<Implementation><![CDATA[
	d $$$AssertEquals(##class(developer.test.Sample).Multi(3,2), 6, "Test Multi(3,2) = 6")
	d $$$AssertEquals(##class(developer.test.Sample).Multi(4,5), 20, "Test Multi(4,5) = 20")
]]></Implementation>
</Method>

<Method name="TestSave">
<Implementation><![CDATA[
	#dim o as developer.data.Defrag1
	
	s o = ..GetData()	
	d $$$AssertStatusOK(o.%Save(),$$$FormatText("id=%1, name=%2",o.%Id(), o.漢字氏名))
	
	d $$$LogMessage("テストコメント！")
]]></Implementation>
</Method>

<Method name="TestGlobalCheck">
<Implementation><![CDATA[
	k ^ZzSample
	s ^ZzSample("test","sample")=1
	
	d $$$AssertTrue($d(^ZzSample("test","sample")),"Test ^ZzSample(""test"",""sample"")")
]]></Implementation>
</Method>

<Method name="GetData">
<ClassMethod>1</ClassMethod>
<ReturnType>developer.data.Defrag1</ReturnType>
<Implementation><![CDATA[
	s o = ##class(developer.data.Defrag1).%New()
	s o.xActive       = ##class(developer.data.Defrag1).DeleActive()
	s o.dele          = ##class(developer.data.Defrag1).DeleActive()
	s o.旧ID          = ##class(developer.data.Defrag1).Null()
	s o.storeCd       = ##class(developer.data.Defrag1).StoreCd()
	s o.patientId     = ##class(developer.data.Defrag1).PatientId()
	s o.漢字氏名      = ##class(developer.data.Defrag1).Name()
	s o.カナ氏名      = ##class(developer.data.Defrag1).KanaName()
	s o.ローマ字氏名  = ##class(%Library.PopulateUtils).Name()
	s o.漢字旧姓      = ##class(developer.data.Defrag1).Null()
	s o.カナ旧姓      = ##class(developer.data.Defrag1).Null()
	s o.性別          = ##class(developer.data.Defrag1).Sex()
	s o.生年月日      = ##class(%Library.PopulateUtils).Date($zdh("1900-01-01",3),+$h)
	s o.死亡日時      = ##class(developer.data.Defrag1).DeathDate()
	s o.コメント      = ##class(%Library.PopulateUtils).Title()
	s o.新患登録日    = ##class(%Library.PopulateUtils).Date($zdh("1900-01-01",3),+$h)
	s o.ABO血液型     = ##class(developer.data.Defrag1).ABO()
	s o.RH血液型      = ##class(developer.data.Defrag1).RH()
	s o.未使用区分    = ##class(developer.data.Defrag1).NotUse()
	
	q o
]]></Implementation>
</Method>

<Method name="OnBeforeAllTests">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	d ##class(developer.data.Defrag1).Populate(1)
	q $$$OK
]]></Implementation>
</Method>

<Method name="OnAfterAllTests">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	q ##class(developer.data.Defrag1).%KillExtent()
]]></Implementation>
</Method>

<Method name="OnBeforeOneTest">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	q $$$OK
]]></Implementation>
</Method>

<Method name="OnAfterOneTest">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	q $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
